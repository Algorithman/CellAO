<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="10.0" Name="CellAO FxCop Project">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">$(FxCopDir)\Xml\FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="de-DE" />
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
  <IgnoreGeneratedCode>False</IgnoreGeneratedCode>
 </ProjectOptions>
 <Targets>
  <Target Name="$(ProjectDir)/CellAO/Built/Debug/ChatEngine.exe" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="$(ProjectDir)/CellAO/Built/Debug/LoginEngine.exe" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="$(ProjectDir)/CellAO/Built/Debug/ZoneEngine.exe" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="False">
    <Rule Name="AbstractTypesShouldNotHaveConstructors" Enabled="True" />
    <Rule Name="AssembliesShouldHaveValidStrongNames" Enabled="True" />
    <Rule Name="AvoidEmptyInterfaces" Enabled="True" />
    <Rule Name="AvoidExcessiveParametersOnGenericTypes" Enabled="True" />
    <Rule Name="AvoidNamespacesWithFewTypes" Enabled="True" />
    <Rule Name="AvoidOutParameters" Enabled="True" />
    <Rule Name="CollectionsShouldImplementGenericInterface" Enabled="True" />
    <Rule Name="ConsiderPassingBaseTypesAsParameters" Enabled="True" />
    <Rule Name="DeclareEventHandlersCorrectly" Enabled="True" />
    <Rule Name="DeclareTypesInNamespaces" Enabled="True" />
    <Rule Name="DefaultParametersShouldNotBeUsed" Enabled="True" />
    <Rule Name="DefineAccessorsForAttributeArguments" Enabled="True" />
    <Rule Name="DoNotCatchGeneralExceptionTypes" Enabled="True" />
    <Rule Name="DoNotDeclareProtectedMembersInSealedTypes" Enabled="True" />
    <Rule Name="DoNotDeclareStaticMembersOnGenericTypes" Enabled="True" />
    <Rule Name="DoNotDeclareVirtualMembersInSealedTypes" Enabled="True" />
    <Rule Name="DoNotDeclareVisibleInstanceFields" Enabled="True" />
    <Rule Name="DoNotHideBaseClassMethods" Enabled="True" />
    <Rule Name="DoNotNestGenericTypesInMemberSignatures" Enabled="True" />
    <Rule Name="DoNotOverloadOperatorEqualsOnReferenceTypes" Enabled="True" />
    <Rule Name="DoNotPassTypesByReference" Enabled="True" />
    <Rule Name="DoNotRaiseExceptionsInUnexpectedLocations" Enabled="True" />
    <Rule Name="EnumeratorsShouldBeStronglyTyped" Enabled="True" />
    <Rule Name="EnumsShouldHaveZeroValue" Enabled="True" />
    <Rule Name="EnumStorageShouldBeInt32" Enabled="True" />
    <Rule Name="ExceptionsShouldBePublic" Enabled="True" />
    <Rule Name="GenericMethodsShouldProvideTypeParameter" Enabled="True" />
    <Rule Name="ICollectionImplementationsHaveStronglyTypedMembers" Enabled="True" />
    <Rule Name="ImplementIDisposableCorrectly" Enabled="True" />
    <Rule Name="ImplementStandardExceptionConstructors" Enabled="True" />
    <Rule Name="IndexersShouldNotBeMultidimensional" Enabled="True" />
    <Rule Name="InterfaceMethodsShouldBeCallableByChildTypes" Enabled="True" />
    <Rule Name="ListsAreStronglyTyped" Enabled="True" />
    <Rule Name="MarkAssembliesWithAssemblyVersion" Enabled="True" />
    <Rule Name="MarkAssembliesWithClsCompliant" Enabled="True" />
    <Rule Name="MarkAssembliesWithComVisible" Enabled="True" />
    <Rule Name="MarkAttributesWithAttributeUsage" Enabled="True" />
    <Rule Name="MarkEnumsWithFlags" Enabled="True" />
    <Rule Name="MembersShouldNotExposeCertainConcreteTypes" Enabled="True" />
    <Rule Name="MovePInvokesToNativeMethodsClass" Enabled="True" />
    <Rule Name="NestedTypesShouldNotBeVisible" Enabled="True" />
    <Rule Name="OverloadOperatorEqualsOnOverloadingAddAndSubtract" Enabled="True" />
    <Rule Name="OverrideMethodsOnComparableTypes" Enabled="True" />
    <Rule Name="PropertiesShouldNotBeWriteOnly" Enabled="True" />
    <Rule Name="ProvideObsoleteAttributeMessage" Enabled="True" />
    <Rule Name="ReplaceRepetitiveArgumentsWithParamsArray" Enabled="True" />
    <Rule Name="StaticHolderTypesShouldBeSealed" Enabled="True" />
    <Rule Name="StaticHolderTypesShouldNotHaveConstructors" Enabled="True" />
    <Rule Name="StringUriOverloadsCallSystemUriOverloads" Enabled="True" />
    <Rule Name="TypesShouldNotExtendCertainBaseTypes" Enabled="True" />
    <Rule Name="TypesThatOwnDisposableFieldsShouldBeDisposable" Enabled="True" />
    <Rule Name="TypesThatOwnNativeResourcesShouldBeDisposable" Enabled="True" />
    <Rule Name="UriParametersShouldNotBeStrings" Enabled="True" />
    <Rule Name="UriPropertiesShouldNotBeStrings" Enabled="True" />
    <Rule Name="UriReturnValuesShouldNotBeStrings" Enabled="True" />
    <Rule Name="UseEventsWhereAppropriate" Enabled="True" />
    <Rule Name="UseGenericEventHandlerInstances" Enabled="True" />
    <Rule Name="UseGenericsWhereAppropriate" Enabled="True" />
    <Rule Name="UseIntegralOrStringArgumentForIndexers" Enabled="True" />
    <Rule Name="UsePropertiesWhereAppropriate" Enabled="True" />
   </RuleFile>
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="False">
    <Rule Name="CompoundWordsShouldBeCasedCorrectly" Enabled="True" />
    <Rule Name="DoNotNameEnumValuesReserved" Enabled="True" />
    <Rule Name="DoNotPrefixEnumValuesWithTypeName" Enabled="True" />
    <Rule Name="EventsShouldNotHaveBeforeOrAfterPrefix" Enabled="True" />
    <Rule Name="FlagsEnumsShouldHavePluralNames" Enabled="True" />
    <Rule Name="IdentifiersShouldBeCasedCorrectly" Enabled="True" />
    <Rule Name="IdentifiersShouldBeSpelledCorrectly" Enabled="True" />
    <Rule Name="IdentifiersShouldDifferByMoreThanCase" Enabled="True" />
    <Rule Name="IdentifiersShouldHaveCorrectPrefix" Enabled="True" />
    <Rule Name="IdentifiersShouldHaveCorrectSuffix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotContainTypeNames" Enabled="True" />
    <Rule Name="IdentifiersShouldNotContainUnderscores" Enabled="True" />
    <Rule Name="IdentifiersShouldNotHaveIncorrectPrefix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotHaveIncorrectSuffix" Enabled="True" />
    <Rule Name="IdentifiersShouldNotMatchKeywords" Enabled="True" />
    <Rule Name="OnlyFlagsEnumsShouldHavePluralNames" Enabled="True" />
    <Rule Name="ParameterNamesShouldMatchBaseDeclaration" Enabled="True" />
    <Rule Name="ParameterNamesShouldNotMatchMemberNames" Enabled="True" />
    <Rule Name="PropertyNamesShouldNotMatchGetMethods" Enabled="True" />
    <Rule Name="ResourceStringCompoundWordsShouldBeCasedCorrectly" Enabled="True" />
    <Rule Name="ResourceStringsShouldBeSpelledCorrectly" Enabled="True" />
    <Rule Name="TypeNamesShouldNotMatchNamespaces" Enabled="True" />
   </RuleFile>
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityTransparencyRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="10.0">
  <Targets>
   <Target Name="$(ProjectDir)/CellAO/Built/Debug/ChatEngine.exe">
    <Modules>
     <Module Name="chatengine.exe">
      <Messages>
       <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Created="2012-08-12 16:09:25Z">
        <Issue Name="NoStrongName">
         <Item>'ChatEngine.exe'</Item>
        </Issue>
       </Message>
       <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Created="2012-08-12 16:09:25Z">
        <Issue>
         <Item>'ChatEngine.exe'</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="ChatEngine">
        <Types>
         <Type Name="AssemblyInfoclass">
          <Members>
           <Member Name="#FileName">
            <Accessors>
             <Accessor Name="#get_FileName()">
              <Messages>
               <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2012-08-12 16:09:25Z">
                <Issue>
                 <Item>'AssemblyInfoclass.FileName.get()'</Item>
                 <Item>'FileVersionInfo.GetVersionInfo(string)'</Item>
                 <Item>&#xD;&#xA;   -&gt;'AssemblyInfoclass.FileName.get()'&#xD;&#xA;   -&gt;'AssemblyInfoclass.FileName.get()'</Item>
                </Issue>
                <Issue>
                 <Item>'AssemblyInfoclass.FileName.get()'</Item>
                 <Item>'FileVersionInfo.OriginalFilename.get()'</Item>
                 <Item>&#xD;&#xA;   -&gt;'AssemblyInfoclass.FileName.get()'&#xD;&#xA;   -&gt;'AssemblyInfoclass.FileName.get()'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#FilePath">
            <Accessors>
             <Accessor Name="#get_FilePath()">
              <Messages>
               <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2012-08-12 16:09:25Z">
                <Issue>
                 <Item>'AssemblyInfoclass.FilePath.get()'</Item>
                 <Item>'FileVersionInfo.FileName.get()'</Item>
                 <Item>&#xD;&#xA;   -&gt;'AssemblyInfoclass.FilePath.get()'&#xD;&#xA;   -&gt;'AssemblyInfoclass.FilePath.get()'</Item>
                </Issue>
                <Issue>
                 <Item>'AssemblyInfoclass.FilePath.get()'</Item>
                 <Item>'FileVersionInfo.GetVersionInfo(string)'</Item>
                 <Item>&#xD;&#xA;   -&gt;'AssemblyInfoclass.FilePath.get()'&#xD;&#xA;   -&gt;'AssemblyInfoclass.FilePath.get()'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#FileVersion">
            <Accessors>
             <Accessor Name="#get_FileVersion()">
              <Messages>
               <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2012-08-12 16:09:25Z">
                <Issue>
                 <Item>'AssemblyInfoclass.FileVersion.get()'</Item>
                 <Item>'FileVersionInfo.FileVersion.get()'</Item>
                 <Item>&#xD;&#xA;   -&gt;'AssemblyInfoclass.FileVersion.get()'&#xD;&#xA;   -&gt;'AssemblyInfoclass.FileVersion.get()'</Item>
                </Issue>
                <Issue>
                 <Item>'AssemblyInfoclass.FileVersion.get()'</Item>
                 <Item>'FileVersionInfo.GetVersionInfo(string)'</Item>
                 <Item>&#xD;&#xA;   -&gt;'AssemblyInfoclass.FileVersion.get()'&#xD;&#xA;   -&gt;'AssemblyInfoclass.FileVersion.get()'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
         <Type Name="Character">
          <Members>
           <Member Name="#Finalize()">
            <Messages>
             <Message TypeName="RemoveEmptyFinalizers" Category="Microsoft.Performance" CheckId="CA1821" Created="2012-08-12 16:09:25Z">
              <Issue>
               <Item>'Character'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ChatLogger">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2012-08-12 16:09:25Z">
              <Issue>
               <Item>'ChatLogger'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetLogString(System.String,System.DateTime)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2012-08-12 16:09:25Z">
              <Issue>
               <Item>'ChatLogger.GetLogString(string, DateTime)'</Item>
               <Item>'object'</Item>
              </Issue>
             </Message>
             <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2012-08-12 16:09:25Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'int.ToString()'</Item>
               <Item>'ChatLogger.GetLogString(string, DateTime)'</Item>
               <Item>'int.ToString(IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'int.ToString()'</Item>
               <Item>'ChatLogger.GetLogString(string, DateTime)'</Item>
               <Item>'int.ToString(IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternateString">
               <Item>'int.ToString()'</Item>
               <Item>'ChatLogger.GetLogString(string, DateTime)'</Item>
               <Item>'int.ToString(IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#m_bEnabled">
            <Messages>
             <Message TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802" Created="2012-08-12 16:09:25Z">
              <Issue>
               <Item>'ChatLogger.m_bEnabled'</Item>
               <Item>1</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#WriteString(System.String,System.String,System.String)">
            <Messages>
             <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2012-08-12 16:09:25Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'DateTime.ToString(string)'</Item>
               <Item>'ChatLogger.WriteString(string, string, string)'</Item>
               <Item>'DateTime.ToString(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ChatServer">
          <Members>
           <Member Name="#OnClientConnected(Cell.Core.ClientBase)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2012-08-13 20:05:45Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'ChatServer.OnClientConnected(ClientBase)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Client">
          <Members>
           <Member Name="#GetMessageNumber(System.Byte[])">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'Client.GetMessageNumber(byte[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PacketReader">
          <Members>
           <Member Name="#.ctor(System.Byte[]&amp;)">
            <Messages>
             <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Created="2012-08-12 16:09:25Z">
              <Issue Level="CriticalWarning">
               <Item>'packet'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Parser">
          <Members>
           <Member Name="#Parse(ChatEngine.Client,System.Byte[],System.UInt16)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'Parser.Parse(Client, byte[], ushort)'</Item>
              </Issue>
             </Message>
             <Message Id="System.UInt16.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2012-08-12 16:09:25Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'ushort.ToString()'</Item>
               <Item>'Parser.Parse(Client, byte[], ushort)'</Item>
               <Item>'ushort.ToString(IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Program">
          <Members>
           <Member Name="#Main(System.String[])">
            <Messages>
             <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2012-08-12 16:09:25Z">
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'Program.Main(string[])'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'Program.Main(string[])'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ZoneCom">
          <Members>
           <Member Name="#Link(System.String,System.Int32,ChatEngine.ChatServer)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2012-08-13 20:05:45Z">
              <Issue>
               <Item>'ZoneCom.Link(string, int, ChatServer)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="ChatEngine.Lists">
        <Types>
         <Type Name="BuddyList">
          <Members>
           <Member Name="#LoadBuddyList(System.Int32)">
            <Messages>
             <Message Id="System.UInt32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2012-08-12 16:09:25Z">
              <Issue Name="IFormatProviderAlternate">
               <Item>'uint.Parse(string)'</Item>
               <Item>'BuddyList.LoadBuddyList(int)'</Item>
               <Item>'uint.Parse(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LoadRecentMsgsList(System.UInt32)">
            <Messages>
             <Message Id="System.UInt32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2012-08-12 16:09:25Z">
              <Issue Name="IFormatProviderAlternate">
               <Item>'uint.Parse(string)'</Item>
               <Item>'BuddyList.LoadRecentMsgsList(uint)'</Item>
               <Item>'uint.Parse(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ChannelsEntry">
          <Members>
           <Member Name="#Id">
            <Messages>
             <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Created="2012-08-12 16:09:25Z">
              <Issue>
               <Item>'ChannelsEntry.Id'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ChatChannels">
          <Members>
           <Member Name="#ChannelNames">
            <Messages>
             <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Created="2012-08-13 20:02:15Z">
              <Issue>
               <Item>'ChatChannels.ChannelNames'</Item>
               <Item>'List&lt;ChannelsEntry&gt;'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="ChatEngine.PacketHandlers">
        <Types>
         <Type Name="Authenticate">
          <Members>
           <Member Name="#Read(ChatEngine.Client,System.Byte[]&amp;)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2012-08-12 16:09:25Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'Authenticate.Read(Client, ref byte[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="AuthenticateBot">
          <Members>
           <Member Name="#Read(ChatEngine.Client,System.Byte[])">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'AuthenticateBot.Read(Client, byte[])'</Item>
              </Issue>
             </Message>
             <Message Id="password" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Created="2012-08-12 16:09:25Z">
              <Issue>
               <Item>'AuthenticateBot.Read(Client, byte[])'</Item>
               <Item>'password'</Item>
               <Item>'string'</Item>
              </Issue>
             </Message>
             <Message Id="unknown" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Created="2012-08-12 16:09:25Z">
              <Issue>
               <Item>'AuthenticateBot.Read(Client, byte[])'</Item>
               <Item>'unknown'</Item>
               <Item>'uint'</Item>
              </Issue>
             </Message>
             <Message Id="username" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Created="2012-08-12 16:09:25Z">
              <Issue>
               <Item>'AuthenticateBot.Read(Client, byte[])'</Item>
               <Item>'username'</Item>
               <Item>'string'</Item>
              </Issue>
             </Message>
             <Message Id="client" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'client'</Item>
               <Item>'AuthenticateBot.Read(Client, byte[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ChannelMessage">
          <Members>
           <Member Name="#Read(ChatEngine.Client,System.Byte[]&amp;)">
            <Messages>
             <Message Id="data_length" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Created="2012-08-12 16:09:25Z">
              <Issue>
               <Item>'ChannelMessage.Read(Client, ref byte[])'</Item>
               <Item>'data_length'</Item>
               <Item>'ushort'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Name">
          <Members>
           <Member Name="#GetCharacterName(System.Int32)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2012-08-12 16:09:25Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'Name.GetCharacterName(int)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PrivateGroupKickEveryone">
          <Members>
           <Member Name="#Read(ChatEngine.Client,System.Byte[]&amp;)">
            <Messages>
             <Message Id="packet" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2012-08-12 16:09:25Z" FixCategory="NonBreaking">
              <Issue>
               <Item>'packet'</Item>
               <Item>'PrivateGroupKickEveryone.Read(Client, ref byte[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="ChatEngine.Packets">
        <Types>
         <Type Name="AuthenticationSeed">
          <Members>
           <Member Name="#Create(System.String)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'AuthenticationSeed.Create(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="BuddyOnlineStatus">
          <Members>
           <Member Name="#Create(System.UInt32,System.UInt32,System.Byte[])">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'BuddyOnlineStatus.Create(uint, uint, byte[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="BuddyRemoved">
          <Members>
           <Member Name="#Create(System.UInt32)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'BuddyRemoved.Create(uint)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ChannelJoin">
          <Members>
           <Member Name="#Create(System.Byte[],System.String,System.UInt32,System.Byte[])">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'ChannelJoin.Create(byte[], string, uint, byte[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ChannelLeave">
          <Members>
           <Member Name="#Create(System.Byte[])">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'ChannelLeave.Create(byte[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ChannelMessage">
          <Members>
           <Member Name="#Create(System.Byte[],System.UInt32,System.String,System.String)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'ChannelMessage.Create(byte[], uint, string, string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="LoginError">
          <Members>
           <Member Name="#Create()">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'LoginError.Create()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="LoginOk">
          <Members>
           <Member Name="#Create()">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'LoginOk.Create()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="MsgAnonymousVicinity">
          <Members>
           <Member Name="#Create(System.String,System.String,System.String)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'MsgAnonymousVicinity.Create(string, string, string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="MsgPredefined">
          <Members>
           <Member Name="#Create(System.UInt32,System.UInt32,System.UInt32,System.String)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'MsgPredefined.Create(uint, uint, uint, string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="MsgPrivateGroup">
          <Members>
           <Member Name="#Create(System.UInt32,System.String,System.String)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'MsgPrivateGroup.Create(uint, string, string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="MsgSystem">
          <Members>
           <Member Name="#Create(System.String)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'MsgSystem.Create(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="MsgVicinity">
          <Members>
           <Member Name="#Create(System.UInt32,System.String,System.Byte)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'MsgVicinity.Create(uint, string, byte)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="NameLookupResult">
          <Members>
           <Member Name="#Create(System.UInt32,System.String)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'NameLookupResult.Create(uint, string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PlayerIdUnknown">
          <Members>
           <Member Name="#Create(System.UInt32)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'PlayerIdUnknown.Create(uint)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PrivateGroupInvitation">
          <Members>
           <Member Name="#Create(System.UInt32)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'PrivateGroupInvitation.Create(uint)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PrivateGroupKicked">
          <Members>
           <Member Name="#Create(System.UInt32)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'PrivateGroupKicked.Create(uint)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PrivateGroupMessage">
          <Members>
           <Member Name="#Create(System.UInt32,System.UInt32,System.String,System.String)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'PrivateGroupMessage.Create(uint, uint, string, string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PrivateGroupPlayerJoined">
          <Members>
           <Member Name="#Create(System.UInt32,System.UInt32)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'PrivateGroupPlayerJoined.Create(uint, uint)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PrivateGroupPlayerLeft">
          <Members>
           <Member Name="#Create(System.UInt32,System.UInt32)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-12 16:09:25Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'PrivateGroupPlayerLeft.Create(uint, uint)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
   <Target Name="$(ProjectDir)/CellAO/Built/Debug/LoginEngine.exe">
    <Modules>
     <Module Name="loginengine.exe">
      <Messages>
       <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Created="2012-08-13 20:21:35Z">
        <Issue Name="NoStrongName">
         <Item>'LoginEngine.exe'</Item>
        </Issue>
       </Message>
       <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Created="2012-08-13 20:21:35Z">
        <Issue>
         <Item>'LoginEngine.exe'</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="LoginEngine">
        <Types>
         <Type Name="AssemblyInfoclass">
          <Members>
           <Member Name="#FileName">
            <Accessors>
             <Accessor Name="#get_FileName()">
              <Messages>
               <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2012-08-13 20:21:35Z">
                <Issue>
                 <Item>'AssemblyInfoclass.FileName.get()'</Item>
                 <Item>'FileVersionInfo.GetVersionInfo(string)'</Item>
                 <Item>&#xD;&#xA;   -&gt;'AssemblyInfoclass.FileName.get()'&#xD;&#xA;   -&gt;'AssemblyInfoclass.FileName.get()'</Item>
                </Issue>
                <Issue>
                 <Item>'AssemblyInfoclass.FileName.get()'</Item>
                 <Item>'FileVersionInfo.OriginalFilename.get()'</Item>
                 <Item>&#xD;&#xA;   -&gt;'AssemblyInfoclass.FileName.get()'&#xD;&#xA;   -&gt;'AssemblyInfoclass.FileName.get()'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#FilePath">
            <Accessors>
             <Accessor Name="#get_FilePath()">
              <Messages>
               <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2012-08-13 20:21:35Z">
                <Issue>
                 <Item>'AssemblyInfoclass.FilePath.get()'</Item>
                 <Item>'FileVersionInfo.FileName.get()'</Item>
                 <Item>&#xD;&#xA;   -&gt;'AssemblyInfoclass.FilePath.get()'&#xD;&#xA;   -&gt;'AssemblyInfoclass.FilePath.get()'</Item>
                </Issue>
                <Issue>
                 <Item>'AssemblyInfoclass.FilePath.get()'</Item>
                 <Item>'FileVersionInfo.GetVersionInfo(string)'</Item>
                 <Item>&#xD;&#xA;   -&gt;'AssemblyInfoclass.FilePath.get()'&#xD;&#xA;   -&gt;'AssemblyInfoclass.FilePath.get()'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="#FileVersion">
            <Accessors>
             <Accessor Name="#get_FileVersion()">
              <Messages>
               <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2012-08-13 20:21:35Z">
                <Issue>
                 <Item>'AssemblyInfoclass.FileVersion.get()'</Item>
                 <Item>'FileVersionInfo.FileVersion.get()'</Item>
                 <Item>&#xD;&#xA;   -&gt;'AssemblyInfoclass.FileVersion.get()'&#xD;&#xA;   -&gt;'AssemblyInfoclass.FileVersion.get()'</Item>
                </Issue>
                <Issue>
                 <Item>'AssemblyInfoclass.FileVersion.get()'</Item>
                 <Item>'FileVersionInfo.GetVersionInfo(string)'</Item>
                 <Item>&#xD;&#xA;   -&gt;'AssemblyInfoclass.FileVersion.get()'&#xD;&#xA;   -&gt;'AssemblyInfoclass.FileVersion.get()'</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
         <Type Name="Client">
          <Members>
           <Member Name="#GetMessageNumber(System.Byte[])">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-13 20:21:35Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'Client.GetMessageNumber(byte[])'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Senddirect(System.Byte[]&amp;)">
            <Messages>
             <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Created="2012-08-13 20:21:35Z">
              <Issue Level="CriticalWarning">
               <Item>'packet'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Parser">
          <Members>
           <Member Name="#Parse(LoginEngine.Client,System.Byte[],System.UInt32)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-16 17:57:05Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'Parser.Parse(Client, byte[], uint)'</Item>
              </Issue>
             </Message>
             <Message Id="System.UInt32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2012-08-16 17:57:05Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'uint.ToString()'</Item>
               <Item>'Parser.Parse(Client, byte[], uint)'</Item>
               <Item>'uint.ToString(IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Program">
          <Messages>
           <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Created="2012-08-13 20:21:35Z">
            <Issue Name="CSharp2_0">
             <Item>'Program'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#Main(System.String[])">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2012-08-13 20:21:35Z">
              <Issue Name="TooGeneric">
               <Item>'Program.Main(string[])'</Item>
               <Item>'Exception'</Item>
              </Issue>
              <Issue Name="TooGeneric">
               <Item>'Program.Main(string[])'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2012-08-13 20:21:35Z">
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'Program.Main(string[])'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'Program.Main(string[])'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'Program.Main(string[])'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'Program.Main(string[])'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'Program.Main(string[])'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
             </Message>
             <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2012-08-13 20:21:35Z">
              <Issue Name="IFormatProviderAlternate">
               <Item>'int.Parse(string)'</Item>
               <Item>'Program.Main(string[])'</Item>
               <Item>'int.Parse(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternate">
               <Item>'int.Parse(string)'</Item>
               <Item>'Program.Main(string[])'</Item>
               <Item>'int.Parse(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternate">
               <Item>'int.Parse(string)'</Item>
               <Item>'Program.Main(string[])'</Item>
               <Item>'int.Parse(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2012-08-13 20:21:35Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'Program.Main(string[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2012-08-13 20:21:35Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'Program.Main(string[])'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2012-08-13 20:21:35Z">
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'Program.Main(string[])'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'Program.Main(string[])'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'Program.Main(string[])'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="LoginEngine.Packets">
        <Types>
         <Type Name="CharacterListPacket">
          <Members>
           <Member Name="#SendPacket(LoginEngine.Client,System.String)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2012-08-13 20:21:35Z">
              <Issue>
               <Item>'client'</Item>
               <Item>'CharacterListPacket.SendPacket(Client, string)'</Item>
               <Item>'Client'</Item>
               <Item>'ClientBase'</Item>
              </Issue>
             </Message>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-15 15:19:22Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'CharacterListPacket.SendPacket(Client, string)'</Item>
              </Issue>
             </Message>
             <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2012-08-13 20:21:35Z">
              <Issue Name="IFormatProviderAlternate">
               <Item>'int.Parse(string)'</Item>
               <Item>'CharacterListPacket.SendPacket(Client, string)'</Item>
               <Item>'int.Parse(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CharacterName">
          <Members>
           <Member Name="#CreateNewChar()">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2012-08-13 20:21:35Z">
              <Issue>
               <Item>'CharacterName.CreateNewChar()'</Item>
               <Item>'Exception'</Item>
              </Issue>
              <Issue>
               <Item>'CharacterName.CreateNewChar()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#DeleteChar(LoginEngine.Client,System.Int32)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2012-08-13 20:21:35Z">
              <Issue>
               <Item>'client'</Item>
               <Item>'CharacterName.DeleteChar(Client, int)'</Item>
               <Item>'Client'</Item>
               <Item>'ClientBase'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2012-08-13 20:21:35Z">
              <Issue>
               <Item>'CharacterName.DeleteChar(Client, int)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetRandomName(LoginEngine.Client,System.Int32)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2012-08-13 20:21:35Z">
              <Issue>
               <Item>'client'</Item>
               <Item>'CharacterName.GetRandomName(Client, int)'</Item>
               <Item>'Client'</Item>
               <Item>'ClientBase'</Item>
              </Issue>
             </Message>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-13 20:21:35Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'CharacterName.GetRandomName(Client, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SendNameInUse(LoginEngine.Client)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2012-08-13 20:21:35Z">
              <Issue>
               <Item>'client'</Item>
               <Item>'CharacterName.SendNameInUse(Client)'</Item>
               <Item>'Client'</Item>
               <Item>'ClientBase'</Item>
              </Issue>
             </Message>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-13 20:21:35Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'CharacterName.SendNameInUse(Client)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#SendNameToStartPlayfield(LoginEngine.Client,System.Boolean,System.Int32)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2012-08-13 20:52:15Z">
              <Issue>
               <Item>'client'</Item>
               <Item>'CharacterName.SendNameToStartPlayfield(Client, bool, int)'</Item>
               <Item>'Client'</Item>
               <Item>'ClientBase'</Item>
              </Issue>
             </Message>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-13 20:52:15Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'CharacterName.SendNameToStartPlayfield(Client, bool, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CheckLogin">
          <Members>
           <Member Name="#IsCharacterOnAccount(LoginEngine.Client,System.Int32)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-13 20:21:35Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'CheckLogin.IsCharacterOnAccount(Client, int)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsLoginAllowed(LoginEngine.Client,System.String)">
            <Messages>
             <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2012-08-13 20:21:35Z">
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'CheckLogin.IsLoginAllowed(Client, string)'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'CheckLogin.IsLoginAllowed(Client, string)'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'CheckLogin.IsLoginAllowed(Client, string)'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'CheckLogin.IsLoginAllowed(Client, string)'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SaltAuthentication">
          <Members>
           <Member Name="#SendPacket(LoginEngine.Client)">
            <Messages>
             <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Created="2012-08-13 20:21:35Z">
              <Issue>
               <Item>'client'</Item>
               <Item>'SaltAuthentication.SendPacket(Client)'</Item>
               <Item>'Client'</Item>
               <Item>'ClientBase'</Item>
              </Issue>
             </Message>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2012-08-13 20:21:35Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'SaltAuthentication.SendPacket(Client)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2012-08-13 20:21:35Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'SaltAuthentication.SendPacket(Client)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="LoginEngine.QueryBase">
        <Types>
         <Type Name="LoginPlayer">
          <Members>
           <Member Name="#breed">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2012-08-13 20:25:44Z">
              <Issue>
               <Item>'LoginPlayer.breed'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetCharacterName(System.String)">
            <Messages>
             <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2012-08-13 20:21:35Z">
              <Issue Name="IFormatProviderAlternate">
               <Item>'int.Parse(string)'</Item>
               <Item>'LoginPlayer.GetCharacterName(string)'</Item>
               <Item>'int.Parse(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
              <Issue Name="IFormatProviderAlternate">
               <Item>'int.Parse(string)'</Item>
               <Item>'LoginPlayer.GetCharacterName(string)'</Item>
               <Item>'int.Parse(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#name">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2012-08-13 20:25:44Z">
              <Issue>
               <Item>'LoginPlayer.name'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#prof">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2012-08-13 20:25:44Z">
              <Issue>
               <Item>'LoginPlayer.prof'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#zone">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2012-08-13 20:25:44Z">
              <Issue>
               <Item>'LoginPlayer.zone'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Rules>
   <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
    <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   </Rule>
   <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
    <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   </Rule>
   <Rule TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011">
    <Resolution Name="Default">Consider changing the type of parameter {0} in {1} from {2} to its base type {3}. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Resolution>
   </Rule>
   <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
    <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   </Rule>
   <Rule TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104">
    <Resolution Name="Default">Remove the read-only designation from {0} or change the field to one that is an immutable reference type. If the reference type {1} is, in fact, immutable, exclude this message.</Resolution>
   </Rule>
   <Rule TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122">
    <Resolution Name="Default">{0} calls into {1} which has a LinkDemand. By making this call, {1} is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: {2}</Resolution>
   </Rule>
   <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
    <Resolution Name="Default">Consider a design that does not require that {0} be a reference parameter.</Resolution>
   </Rule>
   <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
    <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   </Rule>
   <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
    <Resolution Name="Default">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>
   </Rule>
   <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
    <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   </Rule>
   <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
    <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   </Rule>
   <Rule TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819">
    <Resolution Name="Default">Change {0} to return a collection or make it a method.</Resolution>
   </Rule>
   <Rule TypeName="RemoveEmptyFinalizers" Category="Microsoft.Performance" CheckId="CA1821">
    <Resolution Name="Default">{0} implements a finalizer that only calls conditionally emitted methods or the base type finalizer. Remove the finalizer or ensure that it is only conditionally compiled into the assembly. If this violation occurs against a finalizer that is entirely wrapped in a conditionally-emitted block of code, suppress this message.</Resolution>
   </Rule>
   <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
    <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   </Rule>
   <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
    <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
    <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
    <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
    <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
    <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   </Rule>
   <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
    <Resolution Name="CSharp2_0">Because type {0} contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Resolution>
    <Resolution Name="Default">Because type {0} contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Resolution>
   </Rule>
   <Rule TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802">
    <Resolution Name="Default">Field {0} is declared as 'static readonly' but is initialized with a constant value '{1}'. Mark this field as 'const' instead.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
